# Required events context
events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # CORS setup - use origin if available, otherwise allow * 
    map $http_origin $cors_origin {
        default "*";
        "http://localhost:3000" "$http_origin";
        # Add additional allowed origins here for production
        # "https://yourdomain.com" "$http_origin";
    }
    
    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    server {
        listen 80;
        server_name localhost;  # Change this to your actual domain in production
        
        # Proxy AI requests to avoid CORS
        location /api/ {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
                add_header Access-Control-Max-Age 86400 always;
                add_header Content-Type "text/plain charset=UTF-8" always;
                add_header Content-Length 0 always;
                return 204;
            }
            
            # Remove /api prefix and forward to ai.byteshell.eu
            rewrite ^/api/(.*) /api/$1 break;
            
            proxy_pass https://ai.byteshell.eu;
            proxy_http_version 1.1;
            proxy_set_header Host ai.byteshell.eu;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # SSL configuration for upstream
            proxy_ssl_server_name on;
            proxy_ssl_name ai.byteshell.eu;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_verify off;
            
            # Critical for streaming responses
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 300s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            
            # Handle chunked transfer encoding for streaming
            chunked_transfer_encoding on;
            
            # Remove any existing CORS headers from upstream
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
        
            # CORS headers for proxied requests - use consistent header setting
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            add_header Access-Control-Allow-Origin $cors_origin always;
            return 200 "OK\n";
        }
        
        # Default location - return simple status
        location / {
            add_header Content-Type text/plain;
            add_header Access-Control-Allow-Origin $cors_origin always;
            return 200 "ProxyAI Server Running\n";
        }
    }
}
